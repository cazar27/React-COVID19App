{"version":3,"sources":["styles/theme.js","styles/GlobalStyle.js","components/UI/Data.js","components/UI/DataList.js","hooks/useFetch.js","components/screens/Graph.js","components/screens/Home.js","components/screens/Spain.js","components/screens/Contact.js","components/screens/SelectCountries.js","components/UI/MainMenu.js","conf/routes.js","components/screens/Country.js","App.js","reportWebVitals.js","index.js"],"names":["lightTheme","backgroundColor","color","secondaryColor","colorTextPrimary","darkTheme","createGlobalStyle","DataContainer","styled","div","props","theme","Number","span","Label","Data","number","title","deathColor","confirmedColor","recoveredColor","DataList","death","confirmed","recovered","last_date","Box","my","useFetch","url","useState","loading","setLoading","data","setData","useEffect","a","fetch","response","json","console","log","fetchData","Graph","colors","cases","deaths","index","forEach","element","push","x","y","parseInt","ts","d","c","r","domainPadding","width","height","VictoryTheme","material","containerComponent","labels","datum","labelComponent","cornerRadius","flyoutStyle","fill","style","stroke","strokeWidth","active","centerTitle","orientation","gutter","name","symbol","Home","Container","maxWidth","Typography","variant","component","gutterBottom","Spain","useStyles","makeStyles","root","margin","spacing","button","marginTop","submitMsg","opacity","FormGroup","label","initialState","fullname","email","message","image","validateForm","values","errors","Contact","classes","setImage","handleChangeFile","event","URL","createObjectURL","target","files","initialValues","validate","onSubmit","touched","handleChange","handleSubmit","className","id","TextField","type","value","onChange","FormHelperText","src","alt","Button","formControl","minWidth","selectEmpty","SelectCountries","countries","country","setCountry","history","useHistory","listItems","map","MenuItem","FormControl","InputLabel","Select","labelId","marginRight","handleLink","evt","parentNode","childNodes","link","tagName","MainMenu","onClickChangeThemeButton","currentTheme","onClick","to","Country","country_id","useParams","MainContainer","App","isDarkTheme","setIsDarkTheme","GlobalStyle","oldValue","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f5bf4f4.chunk.js","sourcesContent":["// A custom theme for this app\r\nexport const lightTheme = {\r\n  backgroundColor: '#ffffff',\r\n  color: '#1d1d1d',\r\n  secondaryColor: '#000000a8',\r\n  colorTextPrimary: '#000000de',\r\n};\r\n\r\nexport const darkTheme = {\r\n  backgroundColor: '#212854',\r\n  color: '#FAFAFA',\r\n  secondaryColor : '#cfcfcf',\r\n  colorTextPrimary: '#f3f3f3de',\r\n};","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  html, body {\r\n    height: 100%;\r\n  }\r\n\r\n  a.link {\r\n    color: #909090;\r\n  }\r\n\r\n  a.link:active , a.link:hover,   {\r\n    color: #020075;\r\n  }\r\n\r\n  a.activeLink {\r\n    color: #3f51b5;\r\n  }\r\n  \r\n  body {\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }\r\n\r\n  text[id*='tickLabels'] tspan {\r\n    font-size: 11px!important;\r\n  }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst DataContainer = styled.div`\r\n  color: ${props => props.theme.color};\r\n  text-align: left;\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst Number = styled.span`\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin: 5px 0;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  font-size: 1rem;\r\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n  font-weight: 400;\r\n  line-height: 1.43;\r\n  color: ${props => props.theme.secondaryColor};\r\n  margin: 5px 0;\r\n`;\r\n\r\nconst Data = ( {number, title, color } ) => {\r\n\r\n  return (\r\n  \r\n    <DataContainer>\r\n      <Label>\r\n        {title}\r\n      </Label>\r\n      <Number>\r\n        {number}\r\n      </Number>\r\n    </DataContainer>\r\n  )\r\n};\r\n\r\nData.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Data;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport 'fontsource-roboto';\r\nimport Data from './Data';\r\n\r\n//import { AccessAlarm, ThreeDRotation } from '@material-ui/icons';\r\n\r\nconst deathColor = { color: '#f44336' }, confirmedColor = { color: '#f44336' }, recoveredColor= { color: '#f44336' };\r\n\r\nconst DataList = ( {death,confirmed,recovered,last_date} ) => (\r\n  <Box my={4}>\r\n    <Data title=\"Fallecidos: \" number={death} color={deathColor}/>\r\n    <Data title=\"Positivos: \" number={confirmed} color={confirmedColor}/>\r\n    <Data title=\"Recuperados:\" number={recovered} color={recoveredColor}/>\r\n  </Box>\r\n)\r\n\r\nDataList.propTypes = {\r\n  death: PropTypes.number.isRequired,\r\n  confirmed: PropTypes.number.isRequired,\r\n  recovered: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default DataList;","import {useState, useEffect} from 'react';\r\n\r\nconst useFetch = (url) =>  {\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect( () => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setData(data);\r\n        setLoading(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return {data, loading};\r\n}\r\n\r\nexport default useFetch;","import React from 'react';\r\nimport { VictoryChart, VictoryLine, VictoryTheme, VictoryVoronoiContainer, VictoryTooltip, VictoryLegend } from 'victory';\r\n\r\nconst Graph = (data) => {\r\n\r\n  const colors = {red: '#f44336', green: '#8bc34a', yellow: '#ffc107'};\r\n  const cases = {\r\n    deaths: [],confirmed: [], recovered: []\r\n  }\r\n  const months = ['03/20','04/20','05/20','06/20','07/20','08/20','09/20','10/20','11/20','12/20'];\r\n  let index = 70;\r\n  months.forEach(element => {\r\n    cases.deaths.push( {x:element, y: parseInt(data.data.ts[index].d) });\r\n    cases.confirmed.push( {x:element, y: parseInt(data.data.ts[index].c) });\r\n    cases.recovered.push( {x:element, y: parseInt(data.data.ts[index].r) });\r\n    index= index+30;\r\n  }, cases,index);\r\n\r\n  // function getMothTimestamp(timestamp) {\r\n  //   let date = new Date(timestamp * 1000);\r\n  //   let month = date.getMonth()+1;\r\n  //   return month;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <VictoryChart domainPadding={{ x: 0, y:20 }} width={480} height={420} theme={VictoryTheme.material}\r\n      containerComponent={\r\n        <VictoryVoronoiContainer\r\n          labels={({ datum }) => `${datum.y}`}\r\n          labelComponent={\r\n            <VictoryTooltip\r\n              cornerRadius={2}\r\n              flyoutStyle={{ fill: \"white\"}}\r\n            />}\r\n        />}>\r\n        <VictoryLine data={cases.deaths} style={{ data: { stroke: colors.red, strokeWidth: ({ active }) => active ? 3 : 1 }, labels: { fill: colors.red }}} />\r\n        <VictoryLine data={cases.recovered} style={{ data: { stroke: colors.green, strokeWidth: ({ active }) => active ? 3 : 1}, labels: { fill: colors.green }} } />\r\n        <VictoryLine data={cases.confirmed} style={{ data: { stroke: colors.yellow, strokeWidth: ({ active }) => active ? 3 : 1 }, labels: { fill: colors.yellow }} } />\r\n        <VictoryLegend x={125} y={395}\r\n          centerTitle\r\n          orientation=\"horizontal\"\r\n          gutter={20}\r\n\r\n          data={[\r\n            { name: \"Fallecidos\", symbol: { fill: colors.red} },\r\n            { name: \"Recuperados\", symbol: { fill: colors.green } },\r\n            { name: \"Positivos\", symbol: { fill: colors.yellow } }\r\n          ]}\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Graph;","import DataList from '../UI/DataList';\r\nimport {Container, Typography, Box} from '@material-ui/core/';\r\nimport useFetch from 'hooks/useFetch';\r\nimport Graph from 'components/screens/Graph';\r\n\r\nconst Home = () => {\r\n  const {data, loading} = useFetch('https://enrichman.github.io/covid19/world/full.json');\r\n\r\n  if(loading) {\r\n    return (\r\n      <Container maxWidth=\"sm\">Cargando los datos actualizados</Container>\r\n    )\r\n  } else {\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <Box my={2}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            Información actualizada del COVID19 en todo el mundo\r\n          </Typography>\r\n        </Box>\r\n        <Graph data={data} />\r\n        <DataList\r\n          death={data.deaths}\r\n          confirmed={data.confirmed}\r\n          recovered={data.recovered}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Home;","import DataList from '../UI/DataList';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useFetch from '../../hooks/useFetch';\r\n\r\nconst Spain = () => {\r\n  const {data, loading} = useFetch('https://enrichman.github.io/covid19/world/spain/data.json');\r\n  console.log(data)\r\n  if(loading) {\r\n    return (\r\n      <Container maxWidth=\"sm\">Cargando los datos actualizados</Container>\r\n    )\r\n  } else {\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <Box my={2}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            Información actualizada del COVID19 en España\r\n          </Typography>\r\n        </Box>\r\n        <DataList\r\n          death={data.deaths}\r\n          confirmed={data.confirmed}\r\n          recovered={data.recovered}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Spain;","import React, {useState} from 'react';\r\nimport {Formik} from 'formik';\r\nimport styled from 'styled-components';\r\nimport {makeStyles, TextField, Container, Button, FormHelperText } from '@material-ui/core/';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(0),\r\n      width: '100%',\r\n    },\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  submitMsg: {\r\n    opacity: 0,\r\n  }\r\n}));\r\n\r\nconst FormGroup= styled.div`\r\n  margin-bottom: 15px;\r\n`;\r\nconst Label = styled.label`\r\n  display: block;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst initialState = {\r\n  fullname: '',\r\n  email: '',\r\n  message: '',\r\n  image: ''\r\n};\r\n\r\nfunction validateForm(values) {\r\n  const errors = {};\r\n\r\n  if(!values.fullname) {\r\n    errors.fullname = 'El nombre es obligatorio';\r\n  }\r\n  if(!values.email) {\r\n    errors.email = 'El email es obligatorio';\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nconst Contact =  () => {\r\n  const classes = useStyles();\r\n  const [image, setImage] = useState(null);\r\n  \r\n  function handleSubmit(values) {\r\n    console.log(values);\r\n\r\n  }\r\n\r\n  function handleChangeFile(event) {\r\n    setImage(URL.createObjectURL(event.target.files[0]));\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <h1> Formulario de contacto</h1>\r\n      <Formik \r\n        initialValues={initialState} \r\n        validate={validateForm}\r\n        onSubmit={handleSubmit}>\r\n        {({values, errors, touched, handleChange, handleSubmit}) => (\r\n          <form className={classes.root} onSubmit={handleSubmit} id=\"formContact\">\r\n            <TextField label=\"Nombre completo:\" name=\"fullname\" type=\"text\" value={values.fullname} onChange={handleChange} />\r\n            {errors.fullname && touched.fullname && <FormHelperText color=\"error.dark\">{errors.fullname}</FormHelperText>}\r\n            <TextField label=\"Email\" name=\"email\" type=\"text\" value={values.email} onChange={handleChange} />\r\n            {errors.fullname && touched.fullname && <FormHelperText color=\"error.dark\">{errors.email}</FormHelperText>}\r\n            <TextField label=\"Mensaje:\" name=\"message\" value={values.message} onChange={handleChange} />\r\n            <FormGroup>\r\n              <Label>Tu foto:</Label>\r\n              <input label=\"\" type=\"file\" onChange={handleChangeFile} />\r\n              {image && <img width=\"50%\" src={image} alt=\"Profile icon\" />}\r\n            </FormGroup>\r\n            <Button className={classes.button} type=\"submit\" value=\"Enviar\" variant=\"contained\" color=\"primary\">\r\n              Enviar\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <p className={classes.submitMsg}>El formulario fue enviado</p>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Contact;","import React, {useState} from 'react';\r\nimport {makeStyles, InputLabel, FormControl, Select, MenuItem} from '@material-ui/core/';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(0),\r\n    minWidth: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst SelectCountries = ({countries}) => {\r\n  const classes = useStyles();\r\n  const [country, setCountry] = useState('');\r\n  let history = useHistory();\r\n  const handleChange = (event) => {\r\n    setCountry(event.target.value);\r\n\r\n    history.push('/country/'+event.target.value);\r\n  };\r\n\r\n  const listItems = countries.map((country) =>\r\n    <MenuItem\r\n      key={country.id}\r\n      value={country.id}>\r\n        {country.name}\r\n    </MenuItem>\r\n  );\r\n\r\n  if(countries) {\r\n    return (\r\n    \r\n      <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"select-countries\" >Elige un pais:</InputLabel>\r\n          <Select className=\"form-control\" onChange={handleChange}  value={country} labelId=\"select-countries\" id=\"select-countries\">\r\n            {listItems}\r\n          </Select>\r\n      </FormControl>\r\n    \r\n    )\r\n  }\r\n};\r\n\r\nexport default SelectCountries;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {home, spain, contact} from 'conf/routes';\r\nimport {Link} from 'react-router-dom';\r\nimport {Switch as MaterialSwitch, Container, makeStyles } from '@material-ui/core/';\r\nimport useFetch from 'hooks/useFetch';\r\nimport SelectCountries from 'components/screens/SelectCountries';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }\r\n}));\r\nfunction handleLink(evt) {\r\n  const parent = evt.target.parentNode;\r\n  parent.childNodes.forEach(link => {\r\n    if(link.tagName === 'A' ) link.className = 'link';\r\n  });\r\n  evt.target.className = 'activeLink';\r\n}\r\n\r\nconst MainMenu = ({onClickChangeThemeButton,currentTheme}) => {\r\n  const classes = useStyles();\r\n  const {data, loading} = useFetch('https://enrichman.github.io/covid19/world/full.json');\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <nav className={classes.root}>\r\n          <Link onClick={handleLink} className=\"activeLink\" label=\"Home\" to={home()}>\r\n            Mundial\r\n          </Link>\r\n          <Link onClick={handleLink} className=\"link\" to={spain()}>\r\n            España\r\n          </Link>\r\n          <Link onClick={handleLink} className=\"link\" to={contact()}>\r\n            Contactar\r\n          </Link>\r\n          <MaterialSwitch label=\"change theme\" color=\"primary\" onClick={onClickChangeThemeButton} />\r\n          <span>change theme</span>\r\n        </nav>\r\n      </Container>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <nav className={classes.root}>\r\n          <Link onClick={handleLink} className=\"activeLink\" label=\"Home\" to={home()}>\r\n            Mundial\r\n          </Link>\r\n          <Link onClick={handleLink} className=\"link\" to={spain()}>\r\n            España\r\n          </Link>\r\n          <Link onClick={handleLink} className=\"link\" to={contact()}>\r\n            Contactar\r\n          </Link>\r\n          <MaterialSwitch color=\"primary\" onClick={onClickChangeThemeButton} />\r\n        </nav>\r\n        <SelectCountries countries={data.countries} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nMainMenu.propTypes = {\r\n  onClickChangeThemeButton: PropTypes.func.isRequired\r\n};\r\n\r\nexport default MainMenu;","export function home() {\r\n  return '/';\r\n}\r\n\r\nexport function spain() {\r\n  return 'country/spain';\r\n}\r\n\r\nexport function contact() {\r\n  return '/contact';\r\n}","import DataList from '../UI/DataList';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport {useParams} from 'react-router-dom';\r\nimport Graph from 'components/screens/Graph';\r\n\r\nconst Country = () => {\r\n  \r\n  let {country_id} = useParams();\r\n\r\n  if(country_id==null) country_id = 'spain';\r\n  const {data, loading} = useFetch('https://enrichman.github.io/covid19/world/'+country_id+'/data.json');\r\n  if(loading) {\r\n    return (\r\n      <Container maxWidth=\"sm\"> Seleccione un pais valido</Container>\r\n    )\r\n  } else {\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <Box my={2}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            Información actualizada del COVID19\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n            En {country_id}\r\n          </Typography>\r\n        </Box>\r\n        <Graph data={data} />\r\n        <DataList\r\n          death={data.deaths}\r\n          confirmed={data.confirmed}\r\n          recovered={data.recovered}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Country;","import React, {useState} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {lightTheme, darkTheme} from 'styles/theme';\r\nimport styled, {ThemeProvider} from 'styled-components';\r\nimport GlobalStyle from 'styles/GlobalStyle';\r\nimport {home, spain, contact} from 'conf/routes';\r\nimport Home from 'components/screens/Home';\r\nimport Spain from 'components/screens/Spain';\r\nimport Contact from 'components/screens/Contact';\r\nimport MainMenu from 'components/UI/MainMenu';\r\nimport Country from 'components/screens/Country';\r\n\r\nconst MainContainer = styled.div`\r\n  background-color: ${(props) => props.theme.backgroundColor};\r\n  color:  ${(props) => props.theme.color};\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport default function App() {\r\n\r\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\r\n  const handleChangeTheme = () => {\r\n    //setIsDarkTheme(!setIsDarkTheme);\r\n    setIsDarkTheme (oldValue => !oldValue );\r\n  }\r\n  const currentTheme = isDarkTheme ? darkTheme : lightTheme;\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <ThemeProvider theme={currentTheme}>\r\n        <MainContainer theme={currentTheme}>\r\n          <Router>\r\n            <MainMenu onClickChangeThemeButton={handleChangeTheme} theme={currentTheme} />\r\n            <Switch>\r\n              <Route exact path={home()} component={Home}/>\r\n              <Route exact path={spain()} component={Spain}/>\r\n              <Route exact path={contact()} component={Contact}/>\r\n              <Route path=\"/country/:country_id\" component={Country}/>\r\n            </Switch>\r\n          </Router>\r\n        </MainContainer>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport reportWebVitals from 'reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}